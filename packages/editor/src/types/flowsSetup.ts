import * as lang from '@fluss/language';

export type FlowsSliceState = Record<string, lang.FlowGraph>;

export const BASE_FLOW_ID = 'curve';
export const DEFAULT_ENTRY_POINT_ID = 'default_entry';

export const defaultDocumentConfig: lang.FlowDocumentConfig = {
    entryFlows: {
        [DEFAULT_ENTRY_POINT_ID]: { id: DEFAULT_ENTRY_POINT_ID, entryFlowId: BASE_FLOW_ID },
    }
}

export const DEFAULT_ENTRY_POINTS: Record<string, lang.FlowEntryPoint> = {
    
};

export const topFlowSignature: lang.AnonymousFlowSignature = {
    generics: [],
    inputs: [{
        id: 'x',
        label: 'X',
        rowType: 'input-simple',
        dataType: 'number',
    }],
    outputs: [{
        id: 'y',
        label: 'Y',
        rowType: 'output',
        dataType: 'number',
    }],
}

export const initialDefaultRootFlow: lang.FlowGraph = {
    id: BASE_FLOW_ID,
    name: 'Main Flow',
    ...topFlowSignature,
    idCounter: 3,
    nodes: {
        a: {
            id: 'a',
            signature: lang.createAutoGeneratedId(lang.AutoGeneratedSignatures.Input),
            rowStates: {},
            position: { x: 405, y: 206 }
        },
        b: {
            id: 'b',
            signature: lang.createAutoGeneratedId(lang.AutoGeneratedSignatures.Output),
            rowStates: {},
            position: { x: 1020, y: 294 }
        },
    },
};

// const anotherFlow: lang.FlowGraph = {
//     id: 'otherGraph',
//     name: 'Other Graph',
//     nodes: {},
//     inputs: [],
//     outputs: [],
//     idCounter: 0
// }

export const defaultFlows = {
    [initialDefaultRootFlow.id]: initialDefaultRootFlow,
    // [anotherFlow.id]: anotherFlow,
};